services:
  mysql:
    container_name: mysql
    image: mysql:8.4.1
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_PASSWORD=${DB_PASS}
      - MYSQL_ROOT_PASSWORD=${DB_PASS}
    ports:
      - ${DB_HOST_PORT}:${DB_CONTAINER_PORT}
    networks:
      - app-network

  redis:
    container_name: redis
    image: redis:7.2.4
    restart: no
    ports:
      - ${RD_HOST_PORT}:${RD_CONTAINER_PORT}
    networks:
      - app-network

  api-service:
    container_name: api-service
    build:
      context: .
      dockerfile: Dockerfile
    restart: no
    ports:
      - ${API_PORT}:8080
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_CONTAINER_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - RD_HOST=${RD_HOST}
      - RD_PORT=${RD_CONTAINER_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
      - GM_USERNAME=${GM_USERNAME}
      - GM_PASSWORD=${GM_PASSWORD}
      - FRONT_END_DOMAIN=${FRONT_END_DOMAIN}
    depends_on:
      - mysql
      - redis
    networks:
      - app-network

networks:
  app-network:
    external: true
